- name: Generate servers's privkey if not exists
  shell: wg genkey
  register: server_privkey
  when: ansible_facts.ansible_local.wg.interfaces.privkey is undefined

- name: Save privkey
  set_fact:
    ansible_local: "{{ ansible_local | combine({'wg': {'interfaces': {'privkey': server_privkey.stdout }}}, recursive=True) }}"
  when: ansible_facts.ansible_local.wg.interfaces.privkey is undefined
  changed_when: server_privkey is defined
  notify:
    - update_local_facts
    - reload_local_facts

- name: Flush handlers
  meta: flush_handlers

- name: Generate servers's pubkey if not exists
  shell: "echo {{ ansible_facts.ansible_local.wg.interfaces.privkey }} | wg pubkey"
  register: server_pubkey
  when: ansible_facts.ansible_local.wg.interfaces.pubkey is undefined

- name: Save pubkey
  set_fact:
    ansible_local: "{{ ansible_local | combine({'wg': {'interfaces': {'pubkey': server_pubkey.stdout }}}, recursive=True) }}"
  when: ansible_facts.ansible_local.wg.interfaces.pubkey is undefined
  changed_when: server_pubkey is defined
  notify:
    - update_local_facts
    - reload_local_facts

- name: Set next usable ip for peers, if unset
  set_fact:
    ansible_local: "{{ ansible_local | combine({'wg': {'interfaces': {'nextUsable': (wireguard_interface_address | ansible.utils.ipaddr('next_usable')) + '/' + (wireguard_netmask | string ) }}}, recursive=True) }}"
  when: ansible_facts.ansible_local.wg.interfaces.nextUsable is undefined
  changed_when: server_pubkey is defined # Just to run at first time
  notify:
    - update_local_facts
    - reload_local_facts

- name: Flush handlers
  meta: flush_handlers

- name: Generate Users
  include_tasks: peers.yml
  loop: "{{ members }}" 


- name: Generate Wireguard Config
  template:
    src: wg-config.conf.j2
    dest: /etc/wireguard/{{ wireguard_if_name }}.conf
  # notify:
  #   - restart_wg

  